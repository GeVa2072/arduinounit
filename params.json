{"name":"Arduinounit","tagline":"ArduinoUnit is a unit testing framework for Arduino libraries","body":"#Current Version: 1.6\r\n\r\n#Getting Started\r\n\r\nCreate a directory called ArduinoUnit under `<arduino installation directory>\\libraries`.\r\n\r\nCopy everything from the `src` directory to this new directory.\r\n\r\nOpen a sketch in arduino and click `Sketch | Import Library... | ArduinoUnit` to start unit testing.\r\n\r\nFor example, try this simple unit testing sketch:\r\n\r\n    #include <ArduinoUnit.h>\r\n\r\n    // Create test suite\r\n    TestSuite suite;\r\n\r\n    void setup() {\r\n      Serial.begin(9600);\r\n    }\r\n\r\n    // Create a test called 'addition' in the test suite\r\n    test(addition) {\r\n      assertEquals(3, 1 + 2);\r\n    }\r\n\r\n    void loop() {\r\n      // Run test suite, printing results to the serial port\r\n      suite.run();\r\n    }\r\n\r\nUpload this sketch to the Arduino (using the 'Upload' button, `File | Upload` or `Ctrl+U`).\r\n\r\nTurn on the Serial Monitor (using the 'Serial Monitor' button, `Tools | Serial Monitor` or \r\n  `Ctrl+Shift+M`) and expect to see the following:\r\n\r\n    Running test suite...\r\n    Tests run: 1 Successful: 1 Failed: 0\r\n\r\n#FAQ\r\n\r\n1. Q. I'm getting an error message like:\r\n        `1: error: pasting \"test_\" and \"\"something\"\" does not give a valid preprocessing token`\r\n        when I 'Verify' or 'Upload to I/O Board' my sketch. How can I fix this?\r\n\r\n   A. You have declared a test like this with the name in quotes:\r\n\r\n          test(\"something\") {\r\n              // ...\r\n          }\r\n\r\n      The name of the test must not be quoted. i.e. it should look like this:\r\n\r\n          test(something) {\r\n              // ...\r\n          }\r\n\r\n2. Q. I'm getting an error message like:\r\n        `error: redefinition of 'SuiteAppender test_a_appender' In function 'void test_a(Test&)':`\r\n        when I 'Verify' or 'Upload to I/O Board' my sketch. How can I fix this?\r\n\r\n   A. You have two or more tests declared with the same name. For example:\r\n\r\n          test(a) {\r\n              // ...\r\n          }\r\n          \r\n          test(a) {\r\n              // ...\r\n          }\r\n\r\n      The names of all tests in the same sketch must be unique. This is true even if they are in \r\n         different test suites.\r\n\r\n3. Q. I'm trying to write a custom assertion function but I keep getting an error message like:\r\n        `error: '__test__' was not declared in this scope`\r\n        when I 'Verify' or 'Upload to I/O Board' my sketch. How can I fix this?\r\n\r\n   A. You have probably defined a custom assertion function such as the following:\r\n\r\n          void assertStringsEqual(const char* expected, const char* actual) {\r\n              assertEquals(strlen(expected), strlen(actual));\r\n              for (int i = 0; i < strlen(expected); i++) {\r\n                  assertEquals(expected[i], actual[i]);\r\n              }\r\n          }\r\n          \r\n      and are trying to use it like this from within a test function:\r\n       \r\n          assertStringsEqual(\"expected string\", actualString);\r\n          \r\n      To fix this you need to add a `Test& __test__` parameter to the signature of the custom \r\n      assertion function, for example:\r\n      \r\n          void assertStringsEqual(Test& __test__, const char* expected, const char* actual) {\r\n              assertEquals(strlen(expected), strlen(actual));\r\n              for (int i = 0; i < strlen(expected); i++) {\r\n                  assertEquals(expected[i], actual[i]);\r\n              }\r\n          }\r\n\r\n      and add `__test__` as the relevant argument when you call it, for example:\r\n      \r\n          assertStringsEqual(__test__, \"expected string\", actualString);\r\n\r\n4. Q. I'm trying to use a custom assertion function but I keep getting an error message like:\r\n        `error: '<custom_assertion_function>' was not declared in this scope`\r\n        when I 'Verify' or 'Upload to I/O Board' my sketch. How can I fix this?\r\n\r\n   A. You need to define the custom assertion function above where it is being used or \r\n        forward-declare it, for example:\r\n        \r\n          // Forward declare custom assertion\r\n          void assertStringsEqual(Test& __test__, const char* expected, const char* actual);\r\n\r\n          // ...\r\n          \r\n          test(something) {\r\n              // Use custom assertion\r\n              assertStringsEqual(__test__, \"expected string\", actualString);\r\n          }\r\n          \r\n          // ...\r\n\r\n          // Define custom assertion\r\n          void assertStringsEqual(Test& __test__, const char* expected, const char* actual) {\r\n              assertEquals(strlen(expected), strlen(actual));\r\n              for (int i = 0; i < strlen(expected); i++) {\r\n                  assertEquals(expected[i], actual[i]);\r\n              }\r\n          }\r\n\r\n# Version History\r\n## Version 1.6 (17 February 2013)\r\n### Features added:\r\nFake stream for use in place of other streams which allows for injecting bytes to be read\r\nand intercepting bytes to be written.\r\n\r\n## Version 1.5 (3 January 2013)\r\n### Bugs fixed:\r\n  * Issue 4 - Added release notes for version 1.4.2\r\n  * Issue 5 - SerialReporter fails for baud values above 9600.\r\n    Note that the fix for this is a *breaking change* and requires\r\n    all arduinounit sketches using the default serial reporting to\r\n    have `Serial.begin(<baud_rate>)` added in their `setup()` function\r\n  * Issue 6 - Line numbers are being incorrectly reported for failing assertions on Arduino 1.0.3\r\n  * Issue 7 - ArduinoUnit unit tests print garbage output indefinitely\r\n\r\n## Version 1.4.2 (2 October 2011)\r\n### Features added:\r\n* Support for Arduino 1.0 environment (check for arduino version to include correct header)\r\n\r\n## Version 1.4.1 (13 June 2011)\r\n### Bugs fixed:\r\n* Issue 2 - Compilation error on Arduino 0022\r\n* Issue 3 - Incomplete MIT license terms\r\n\r\n## Version 1.4 (28 June 2009)\r\n### Features added:\r\n* Checks and reporting on heap allocation failures.\r\n* Example of using ArduinoUnit to check the correct functioning of digital I/O pins 2-13.\r\n\r\n### Bugs fixed:\r\n* Each failed assertion counts as a single test function failure. Two failed assertions\r\n  in the same test function double-count the failure. Since the usual case is that \r\n  failing assertions short-cut a test function execution by returning this is only\r\n  noticeable where a test function calls other functions which perform the assertions.\r\n\r\n* Stack/heap collisions are not reported and cause incorrect behaviour, reporting (for \r\n  example):\r\n  \r\n        Equality assertion failed in 'nameReported' on line 310: expected \r\n        '9599460892\u001CleFailingAssertion' but was '0'\r\n\r\n## Version 1.3 (01 June 2009)\r\n### Features added:\r\n* Allowed the use of variables named `test` in test functions. The name `__test__` is now a \r\n  reserved word and if used as a variable name within a test function e.g. like this:\r\n\r\n        test(name) {\r\n          int __test__ = 0;\r\n        }    \r\n\r\n  verifying or uploading the sketch will cause the following compilation error:\r\n  `error: declaration of 'int __test__' shadows a parameter`\r\n\r\n* Added keyword highlighting for `TestSuite`, `run`, `test`, `assertTrue`, `assertEquals`\r\n  and `__test__`.\r\n\r\n### Bugs fixed:\r\n* Line numbers of failing boolean assertions (assertTrue()) are 3 greater than the real\r\n  line numbers (line numbers reported for failing equality assertions are correct)\r\n\r\n## Version 1.2 (29 May 2009)\r\n### Features added:\r\n* Reduced the compiled size of sketches using ArduinoUnit:\r\n\r\n        Usage                      From (bytes)    To (bytes)    Reduction (bytes)\r\n        -----------------------    ------------    ----------    -----------------\r\n        Including ArduinoUnit.h    2014            1906          108\r\n        Creating a test suite       766             774           -8\r\n        Running a test suite        132             120           12\r\n        -----------------------    ------------    ----------    -----------------\r\n        Total                      2912            2800          112\r\n\r\n### Bugs fixed:\r\n* Using `Sketch | Import Library | ArduinoUnit` `#includes` all the header files in the \r\n  ArduinoUnit directory rather than just `ArduinoUnit.h`\r\n\r\n## Version 1.1 (27 May 2009)\r\n### Bugs fixed:\r\n* When using multiple test suites in a sketch all assertions are reported in against the last \r\n  defined suite.\r\n\r\n## Version 1.0 (25 May 2009)\r\n### Features added:\r\n* Simple test definition and execution\r\n* Boolean assertions\r\n* Integer equality assertions\r\n* Default reporting of results to the serial port\r\n* Ability to customize result reporting (e.g. where serial port is being used by the code under test)\r\n* Support for multiple (optionally named) test suites\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}